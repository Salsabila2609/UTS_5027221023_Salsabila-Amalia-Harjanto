# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import absensi_pb2 as absensi__pb2


class AbsensiServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAbsensiMasuk = channel.unary_unary(
                '/AbsensiService/CreateAbsensiMasuk',
                request_serializer=absensi__pb2.Absensi.SerializeToString,
                response_deserializer=absensi__pb2.Absensi.FromString,
                )
        self.CreateAbsensiPulang = channel.unary_unary(
                '/AbsensiService/CreateAbsensiPulang',
                request_serializer=absensi__pb2.Absensi.SerializeToString,
                response_deserializer=absensi__pb2.Absensi.FromString,
                )
        self.UpdateAbsensi = channel.unary_unary(
                '/AbsensiService/UpdateAbsensi',
                request_serializer=absensi__pb2.Absensi.SerializeToString,
                response_deserializer=absensi__pb2.Absensi.FromString,
                )
        self.ReadAbsensi = channel.unary_stream(
                '/AbsensiService/ReadAbsensi',
                request_serializer=absensi__pb2.AbsensiRequest.SerializeToString,
                response_deserializer=absensi__pb2.Absensi.FromString,
                )
        self.DeleteAbsensi = channel.unary_unary(
                '/AbsensiService/DeleteAbsensi',
                request_serializer=absensi__pb2.AbsensiRequest.SerializeToString,
                response_deserializer=absensi__pb2.Absensi.FromString,
                )
        self.SearchAbsensiIdByNamaKaryawanAndTanggal = channel.unary_unary(
                '/AbsensiService/SearchAbsensiIdByNamaKaryawanAndTanggal',
                request_serializer=absensi__pb2.AbsensiRequest.SerializeToString,
                response_deserializer=absensi__pb2.AbsensiId.FromString,
                )


class AbsensiServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateAbsensiMasuk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAbsensiPulang(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAbsensi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadAbsensi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAbsensi(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchAbsensiIdByNamaKaryawanAndTanggal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AbsensiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAbsensiMasuk': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAbsensiMasuk,
                    request_deserializer=absensi__pb2.Absensi.FromString,
                    response_serializer=absensi__pb2.Absensi.SerializeToString,
            ),
            'CreateAbsensiPulang': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAbsensiPulang,
                    request_deserializer=absensi__pb2.Absensi.FromString,
                    response_serializer=absensi__pb2.Absensi.SerializeToString,
            ),
            'UpdateAbsensi': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAbsensi,
                    request_deserializer=absensi__pb2.Absensi.FromString,
                    response_serializer=absensi__pb2.Absensi.SerializeToString,
            ),
            'ReadAbsensi': grpc.unary_stream_rpc_method_handler(
                    servicer.ReadAbsensi,
                    request_deserializer=absensi__pb2.AbsensiRequest.FromString,
                    response_serializer=absensi__pb2.Absensi.SerializeToString,
            ),
            'DeleteAbsensi': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAbsensi,
                    request_deserializer=absensi__pb2.AbsensiRequest.FromString,
                    response_serializer=absensi__pb2.Absensi.SerializeToString,
            ),
            'SearchAbsensiIdByNamaKaryawanAndTanggal': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchAbsensiIdByNamaKaryawanAndTanggal,
                    request_deserializer=absensi__pb2.AbsensiRequest.FromString,
                    response_serializer=absensi__pb2.AbsensiId.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AbsensiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AbsensiService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateAbsensiMasuk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AbsensiService/CreateAbsensiMasuk',
            absensi__pb2.Absensi.SerializeToString,
            absensi__pb2.Absensi.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAbsensiPulang(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AbsensiService/CreateAbsensiPulang',
            absensi__pb2.Absensi.SerializeToString,
            absensi__pb2.Absensi.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAbsensi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AbsensiService/UpdateAbsensi',
            absensi__pb2.Absensi.SerializeToString,
            absensi__pb2.Absensi.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadAbsensi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/AbsensiService/ReadAbsensi',
            absensi__pb2.AbsensiRequest.SerializeToString,
            absensi__pb2.Absensi.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAbsensi(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AbsensiService/DeleteAbsensi',
            absensi__pb2.AbsensiRequest.SerializeToString,
            absensi__pb2.Absensi.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchAbsensiIdByNamaKaryawanAndTanggal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AbsensiService/SearchAbsensiIdByNamaKaryawanAndTanggal',
            absensi__pb2.AbsensiRequest.SerializeToString,
            absensi__pb2.AbsensiId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
